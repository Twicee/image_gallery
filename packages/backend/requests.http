### Get all images
# This is a comment
GET http://localhost:3000/api/images

### A second example.  Each request must be delimited by a triple hash
POST http://localhost:3000/api/test
Content-Type: application/json # Content-Type header is a must if you're sending JSON
# Request body separated from headers by newline

{ "a": 1, "b": 2 }

### Search images by name
GET http://localhost:3000/api/images/search?name=shiba

### See all Images
GET http://localhost:3000/api/images
Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6ImNodW5reWxvdmVyMjMiLCJpYXQiOjE3NDkxNzY5NTksImV4cCI6MTc0OTI2MzM1OX0.WDMVfIOctEG1_SkhpS5TWo_461oQGsbnorZfdZOG-7I

### Edit image name
PATCH http://localhost:3000/api/images/68396ffd8da65d4477286ac5
Content-Type: application/json

{
  "name": "Sheep"
}

### Invalid ObjectId format
PATCH http://localhost:3000/api/images/not-a-valid-objectid
Content-Type: application/json

{
  "name": "Should 404 for invalid ObjectId"
}

### Valid format but not in DB
PATCH http://localhost:3000/api/images/68396ffd8da65d4477286aaa
Content-Type: application/json

{
  "name": "Should 404 because it doesn't exist"
}

### Bad request format
PATCH http://localhost:3000/api/images/68396ffd8da65d4477286aaa
Content-Type: application/json

{
  "name": 123
}

### Too long of a name
PATCH http://localhost:3000/api/images/68396ffd8da65d4477286ac5
Content-Type: application/json

{
  "name": "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"
}

### New user registration
POST http://localhost:3000/auth/register
Content-Type: application/json

{
  "username": "chunkylover23",
  "password": "password"
}

### Missing fields
POST http://localhost:3000/auth/register
Content-Type: application/json

{
  "username": "onlyusername"
}

### Duplicate username
POST http://localhost:3000/auth/register
Content-Type: application/json

{
  "username": "newuser",
  "password": "password"
}

### Login and get token
POST http://localhost:3000/auth/login
Content-Type: application/json

{
  "username": "chunkylover23",
  "password": "password"
}

### Invalid username -> triggers 401
POST http://localhost:3000/auth/login
Content-Type: application/json

{
  "username": "doesnotexist",
  "password": "password"
}

### Login with incorrect password -> triggers 401
POST http://localhost:3000/auth/login
Content-Type: application/json

{
  "username": "newuser",
  "password": "wrongpassword"
}

### Login with missing fields -> triggers 400
POST http://localhost:3000/auth/login
Content-Type: application/json

{
  "username": "newuser"
}

### Should succeed if token owner === authorId
PATCH http://localhost:3000/api/images/68396ffd8da65d4477286ac5
Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6ImNodW5reWxvdmVyMjMiLCJpYXQiOjE3NDkxNzY5NTksImV4cCI6MTc0OTI2MzM1OX0.WDMVfIOctEG1_SkhpS5TWo_461oQGsbnorZfdZOG-7I
Content-Type: application/json

{
  "name": "Sheepies"
}

### Should fail with 403 if logged-in user != authorId
PATCH http://localhost:3000/api/images/68396ffd8da65d4477286ac8
Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6ImNodW5reWxvdmVyMjMiLCJpYXQiOjE3NDkxNzY5NTksImV4cCI6MTc0OTI2MzM1OX0.WDMVfIOctEG1_SkhpS5TWo_461oQGsbnorZfdZOG-7I
Content-Type: application/json

{
  "name": "newuser"
}



